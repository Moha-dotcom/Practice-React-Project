{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedabdullahi/Desktop/Food-Order-App/src/Store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useReducer } from 'react';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultStart = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  // if(action.type === \"ADD_TO_CART\"){\n  //   // Updating the TotalAmount\n  //   const updatedTotalamount = state.totalAmount + action.item.price * action.item.amount;\n  //   // Check if that item Exists in the Cart.\n  //   const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id)\n\n  //   let updatedItems ;\n  //   const existingCartItem = state.items[existingCartItemIndex]\n\n  //   // If item exists in the Cart\n  //   if(existingCartItem){\n  //     // We create an updated Item\n  //     const updatedItem  = {...existingCartItem, amount : existingCartItem.amount + action.items.amount};\n  //     updatedItems = [...state.items];\n  //     updatedItems[existingCartItemIndex] = updatedItem;\n  //   }else{\n\n  //      updatedItems = state.items.concat(action.items);\n  //   }\n\n  //    return {\n  //       items : updatedItems,\n  //       totalAmount : updatedTotalamount\n  //     };\n  // }\n\n  // if(action.type === \"REMOVEITEM\"){\n\n  // }\n};\nfunction CartProvider(props) {\n  _s();\n  const [CartState, dispatchCartAction] = useReducer(cartReducer, defaultStart);\n  const addCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_TO_CART\",\n      item: item\n    });\n  };\n  const removeCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVEITEM\",\n      id: id\n    });\n  };\n  console.log(CartState.items);\n  const cartContext = {\n    items: CartState.items,\n    totalAmount: CartState.totalAmount,\n    addItem: addCartHandler,\n    removeItem: removeCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n_s(CartProvider, \"wVF1+PWVorkwkbcnxcoZsuAxEoA=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultStart","items","totalAmount","cartReducer","state","action","CartProvider","props","CartState","dispatchCartAction","addCartHandler","item","type","removeCartHandler","id","console","log","cartContext","addItem","removeItem","children"],"sources":["/Users/mohamedabdullahi/Desktop/Food-Order-App/src/Store/CartProvider.js"],"sourcesContent":["import React from 'react'\nimport { useReducer } from 'react'\nimport CartContext from './CartContext'\n\nconst defaultStart = {\n    items : [],\n    totalAmount : 0\n}\nconst cartReducer = (state, action) => {\n  // if(action.type === \"ADD_TO_CART\"){\n  //   // Updating the TotalAmount\n  //   const updatedTotalamount = state.totalAmount + action.item.price * action.item.amount;\n  //   // Check if that item Exists in the Cart.\n  //   const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id)\n  \n  //   let updatedItems ;\n  //   const existingCartItem = state.items[existingCartItemIndex]\n\n  //   // If item exists in the Cart\n  //   if(existingCartItem){\n  //     // We create an updated Item\n  //     const updatedItem  = {...existingCartItem, amount : existingCartItem.amount + action.items.amount};\n  //     updatedItems = [...state.items];\n  //     updatedItems[existingCartItemIndex] = updatedItem;\n  //   }else{\n    \n  //      updatedItems = state.items.concat(action.items);\n  //   }\n\n  //    return {\n  //       items : updatedItems,\n  //       totalAmount : updatedTotalamount\n  //     };\n  // }\n  \n  // if(action.type === \"REMOVEITEM\"){\n    \n  // }\n\n \n\n}\n\n\n\nfunction CartProvider (props) {\n  const [CartState, dispatchCartAction ] = useReducer(cartReducer, defaultStart);\n\n\n  const addCartHandler = (item) => {\n    dispatchCartAction({type : \"ADD_TO_CART\", item : item})\n\n  }\n\n  const removeCartHandler = (id) => {\n    dispatchCartAction({type : \"REMOVEITEM\", id : id})\n    \n  }\n\n  console.log(CartState.items)\n\n\n  const cartContext = {\n    items : CartState.items,\n    totalAmount : CartState.totalAmount,\n    addItem : addCartHandler,\n    removeItem : removeCartHandler\n\n  }\n  return (\n      <CartContext.Provider value={cartContext}>\n        {props.children}\n      </CartContext.Provider>\n  )\n}\n\nexport default CartProvider;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,eAAe;AAAA;AAEvC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAG,EAAE;EACVC,WAAW,EAAG;AAClB,CAAC;AACD,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;AAAA,CAID;AAID,SAASC,YAAY,CAAEC,KAAK,EAAE;EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAE,GAAGX,UAAU,CAACK,WAAW,EAAEH,YAAY,CAAC;EAG9E,MAAMU,cAAc,GAAIC,IAAI,IAAK;IAC/BF,kBAAkB,CAAC;MAACG,IAAI,EAAG,aAAa;MAAED,IAAI,EAAGA;IAAI,CAAC,CAAC;EAEzD,CAAC;EAED,MAAME,iBAAiB,GAAIC,EAAE,IAAK;IAChCL,kBAAkB,CAAC;MAACG,IAAI,EAAG,YAAY;MAAEE,EAAE,EAAGA;IAAE,CAAC,CAAC;EAEpD,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACR,SAAS,CAACP,KAAK,CAAC;EAG5B,MAAMgB,WAAW,GAAG;IAClBhB,KAAK,EAAGO,SAAS,CAACP,KAAK;IACvBC,WAAW,EAAGM,SAAS,CAACN,WAAW;IACnCgB,OAAO,EAAGR,cAAc;IACxBS,UAAU,EAAGN;EAEf,CAAC;EACD,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEI,WAAY;IAAA,UACtCV,KAAK,CAACa;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE7B;AAAC,GA7BQd,YAAY;AAAA,KAAZA,YAAY;AA+BrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}